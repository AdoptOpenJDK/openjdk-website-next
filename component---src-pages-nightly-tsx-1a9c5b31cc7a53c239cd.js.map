{"version":3,"sources":["webpack:///./src/pages/nightly.tsx","webpack:///./src/components/ReleaseSelector.tsx","webpack:///./src/components/Loading.tsx","webpack:///./src/components/NavButton.tsx","webpack:///./node_modules/office-ui-fabric-react/lib/components/Label/Label.base.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Label/Label.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Label/Label.styles.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/ChoiceGroup/ChoiceGroupOption/ChoiceGroupOption.base.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/ChoiceGroup/ChoiceGroupOption/ChoiceGroupOption.styles.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/ChoiceGroup/ChoiceGroupOption/ChoiceGroupOption.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/ChoiceGroup/ChoiceGroup.base.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/ChoiceGroup/ChoiceGroup.styles.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/ChoiceGroup/ChoiceGroup.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_Layout__WEBPACK_IMPORTED_MODULE_1__","_components_NavButton__WEBPACK_IMPORTED_MODULE_3__","_components_ReleaseSelector__WEBPACK_IMPORTED_MODULE_4__","Nightly","props","a","createElement","className","href","type","onVersionChange","e","console","log","onJVMChange","id","value","selected","placeholder","aria-hidden","map","office_ui_fabric_react__WEBPACK_IMPORTED_MODULE_1__","ReleaseSelector","_ref","defaultSelectedKey","onChange","options","key","text","rel","target","Loading","src","width","height","alt","NavButton","children","color","getClassNames","Object","classNamesFunction","Label_base_LabelBase","_super","LabelBase","apply","this","arguments","tslib_es6","prototype","render","_a","_b","as","RootType","disabled","styles","required","theme","classNames","react","properties","root","Label","styled","fonts","medium","semanticColors","bodyText","boxSizing","boxShadow","margin","display","padding","wordWrap","overflowWrap","disabledBodyText","selectors","lib","::after","content","errorText","paddingRight","undefined","scope","ChoiceGroupOption_base_getClassNames","ChoiceGroupOption_base_ChoiceGroupOptionBase","ChoiceGroupOptionBase","_this","_inputElement","_onRenderField","onRenderLabel","_onRenderLabel","imageSrc","imageAlt","selectedImageSrc","iconProps","imageSize","htmlFor","_classNames","field","innerField","style","imageWrapper","Image","selectedImageWrapper","iconWrapper","Icon","labelWrapper","maxWidth","labelId","ariaLabel","focused","checked","name","_c","onRenderField","rest","hasIcon","hasImage","imageIsLarge","_d","nativeProps","choiceFieldWrapper","aria-label","ref","css","input","_onChange","bind","onFocus","_onFocus","onBlur","_onBlur","evt","GlobalClassNames","choiceFieldTransitionDuration","getChoiceGroupFocusStyle","palette","hasIconOrImage","initializeFocusRects","position","outline","::-moz-focus-inner","border",":after","top","right","bottom","left","pointerEvents","neutralSecondary","neutralPrimary","borderColor","borderWidth","getImageWrapperStyle","isSelectedImageWrapper","paddingBottom","transitionProperty","transitionDuration","transitionTimingFunction",".ms-Image","borderStyle","overflow","opacity","ChoiceGroupOption","_e","fieldHoverOrFocusProperties",".ms-ChoiceFieldLabel","bodyTextChecked",":before","inputBackgroundCheckedHovered","inputBorderHovered","enabledFieldWithImageHoverOrFocusProperties","themeDark","neutralTertiaryAlt","circleAreaProperties","backgroundColor","bodyBackground","smallInputBorder","fontWeight","borderRadius","disabledText","inputBackgroundChecked","dotAreaProperties","choiceFieldSize","radioButtonSpacing","alignItems","fontSize","regular","minHeight","marginTop","paddingLeft","neutralLighter","cursor","verticalAlign","userSelect",":hover",":focus","paddingTop","textAlign","justifyContent","flexDirection","themePrimary","lineHeight","labelWrapperLineHeight","whiteSpace","textOverflow","ChoiceGroup_base_getClassNames","ChoiceGroup_base_ChoiceGroupBase","ChoiceGroupBase","call","focusedVars","changedVars","ev","option","setState","keyFocused","keyChecked","state","onChanged","selectedKey","originalOption","array","initializeComponentRef","validDefaultSelectedKey","some","_getKeyChecked","_id","object","_labelId","defineProperty","get","enumerable","configurable","componentWillReceiveProps","newProps","newKeyChecked","label","role","divProps","optionsContainIconOrImage","Boolean","ariaLabelledBy","applicationRole","aria-labelledby","flexContainer","innerOptionProps","focus","_i","options_1","length","elementToFocus","document","getElementById","getAttribute","current","optionsChecked","filter","defaultProps","ChoiceGroup_styles_GlobalClassNames","d","ChoiceGroup","flexWrap"],"mappings":"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","file":"component---src-pages-nightly-tsx-1a9c5b31cc7a53c239cd.js","sourcesContent":["import React, {FunctionComponent, SyntheticEvent} from \"react\"\nimport Layout from \"../components/Layout\"\nimport Loading from \"../components/Loading\";\nimport NavButton from \"../components/NavButton\"\nimport { PrimaryButton } from 'office-ui-fabric-react'\nimport ReleaseSelector from \"../components/ReleaseSelector\";\n\nimport \"../scss/styles-3-nightly.scss\"\n\nexport interface NightlyProps {\n}\n\nconst Nightly: FunctionComponent<NightlyProps> = props => {\n\n    const loading = false\n    const thisInstallerLink = false\n    const platforms = [{\n        placeholder: true\n    }]\n\n    if (loading) {\n        return <Loading/>\n    }\n\n    return (\n        <Layout>\n            <h1 className=\"large-title\">Nightly builds</h1>\n            <NavButton href=\"./releases\" type=\"primary\">Latest Release</NavButton>\n            <NavButton href=\"./archive\" type=\"secondary\">Release Archive</NavButton>\n            <ReleaseSelector\n                onVersionChange={(e: SyntheticEvent) => {\n                    console.log(e)\n                }}\n                onJVMChange={(e: SyntheticEvent) => {\n                    console.log(e)\n                }}\n            />\n\n            <div>\n                <span>View</span>\n                <select id=\"numberpicker\">\n                    <option value=\"10\">10</option>\n                    <option value=\"20\" selected={true}>20</option>\n                    <option value=\"50\">50</option>\n                    <option value=\"100\">100</option>\n                </select>\n                <span>builds prior to: </span>\n                <input type=\"text\" id=\"datepicker\"/>\n            </div>\n\n            <input type=\"text\" className=\"block margin-auto\" id=\"search\" placeholder=\"Search these builds\"/>\n\n            <h3 id=\"scroll-text\" className=\"hide\">Scroll horizontally <i className=\"fa fa-arrow-circle-o-right\"\n                                                                         aria-hidden=\"true\"/></h3>\n            <div id=\"search-error\" className=\"hide\">No search results</div>\n\n            <div id=\"nightly-list\">\n                <table id=\"table-parent\">\n                    <thead id=\"table-head\">\n                    <tr id='table-header'>\n                        <th>Platform</th>\n                        <th>Type</th>\n                        <th>Date</th>\n                        <th>Binary</th>\n                        <th>Installer</th>\n                        <th>Checksum</th>\n                    </tr>\n                    </thead>\n                    <tbody id=\"nightly-table\">\n                    {platforms.map(() => {\n                        return (\n                            <tr className='nightly-container'>\n                                <td className='nightly-platform-block'>Linux aarch64</td>\n                                <td className='nightly-platform-type'>jdk</td>\n                                <td>\n                                    <div className='nightly-release-date'>13 June 2019</div>\n                                </td>\n                                <td className='nightly-downloads-block'>\n                                    <div>\n                                        <a className='dark-link' href=\"\">\n                                            .tar.gz (99 MB)\n                                        </a>\n                                    </div>\n                                </td>\n                                {\n                                    thisInstallerLink ?\n                                        <td className='nightly-downloads-block'>\n                                            <div>\n                                                <a className='dark-link' href=\"\">\n                                                    .pkg\n                                                </a>\n                                            </div>\n                                        </td>\n                                        :\n                                        <td className='nightly-downloads-block'>\n                                            <div>Not available</div>\n                                        </td>\n                                }\n                                <td><a href=\"\" className='dark-link'>Checksum</a></td>\n                            </tr>\n                        )\n                    })\n                    }\n                    </tbody>\n                </table>\n            </div>\n        </Layout>\n    )\n}\n\nexport default Nightly;","import React, { FunctionComponent, SyntheticEvent } from \"react\"\n\nimport { ChoiceGroup } from \"office-ui-fabric-react\"\n\nexport interface ReleaseSelectorProps {\n  onVersionChange(e: SyntheticEvent): void\n  onJVMChange(e: SyntheticEvent): void\n}\n\nconst ReleaseSelector: FunctionComponent<ReleaseSelectorProps> = ({\n  onVersionChange,\n  onJVMChange,\n}) => {\n  return (\n    <div className=\"btn-container\">\n      <form id=\"jdk-selector\" className=\"btn-form\">\n        <h3>1. Choose a Version</h3>\n        <ChoiceGroup\n          defaultSelectedKey=\"A\"\n          onChange={onVersionChange}\n          options={[\n            {\n              key: \"A\",\n              text: \"OpenJDK 8 (LDS)\",\n            },\n            {\n              key: \"B\",\n              text: \"OpenJDK 9\",\n            },\n            {\n              key: \"C\",\n              text: \"OpenJDK 10\",\n            },\n          ]}\n        />\n      </form>\n      <form id=\"jvm-selector\" className=\"btn-form\">\n        <h3>\n          2. Choose a JVM\n          <span className=\"help-jvm\">Help Me Choose</span>\n          <div className=\"popup-content\" id=\"jvm-popup\">\n            <div className=\"popup-heading\">\n              <h4>Choosing the right JVM</h4>\n            </div>\n            <div className=\"popup-text\">\n              <p className=\"hotspot-text\">\n                <b>HotSpot</b> is the VM from the OpenJDK community. It is the\n                most widely used VM today and is used in Oracle’s JDK. It is\n                suitable for all workloads.\n              </p>\n              <p>\n                For more details see{\" \"}\n                <a\n                  rel=\"noopener\"\n                  target=\"_blank\"\n                  href=\"https://openjdk.java.net/groups/hotspot/\"\n                >\n                  OpenJDK HotSpot\n                </a>\n                .\n              </p>\n              <p className=\"openj9-text\">\n                <b>Eclipse OpenJ9</b> is the VM from the Eclipse community. It\n                is an enterprise-grade VM designed for low memory usage and fast\n                start-up and is used in IBM’s JDK. It is suitable for running\n                all workloads.\n              </p>\n              <p>\n                For more details see{\" \"}\n                <a\n                  rel=\"noopener\"\n                  target=\"_blank\"\n                  href=\"https://www.eclipse.org/openj9/\"\n                >\n                  Eclipse OpenJ9\n                </a>\n                .\n              </p>\n            </div>\n          </div>\n        </h3>\n\n        <ChoiceGroup\n          defaultSelectedKey=\"A\"\n          onChange={onJVMChange}\n          options={[\n            {\n              key: \"A\",\n              text: \"HotSpot\",\n            },\n            {\n              key: \"B\",\n              text: \"OpenJ9\",\n            },\n          ]}\n        />\n      </form>\n    </div>\n  )\n}\n\nexport default ReleaseSelector\n","import React, { FunctionComponent } from 'react'\n\nconst Loading: FunctionComponent = () => {\n    return(\n        <div id=\"loading\"><img src=\"dist/assets/loading_dots.gif\" width=\"40\" height=\"40\" alt=\"Content is loading.\"/></div>\n    )\n}\n\nexport default Loading","import React, {FunctionComponent, ReactChild} from 'react'\n\nexport interface NavButtonProps {\n    href: string,\n    type: string,\n    children: ReactChild\n}\n\nconst NavButton: FunctionComponent<NavButtonProps> = ({href, type, children}) => {\n\n    const color = type === \"primary\" ? \"blue\" : \"grey\"\n\n    return (\n        <a href={href} className={`${color}-button a-button`}>\n            <div>\n                <span>{children}</span> <i className=\"fa fa-arrow-circle-o-right\" aria-hidden=\"true\"/>\n            </div>\n        </a>\n    )\n}\n\nexport default NavButton","import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport { divProperties, getNativeProps } from '../../Utilities';\nimport { classNamesFunction } from '../../Utilities';\nvar getClassNames = classNamesFunction();\nvar LabelBase = /** @class */ (function (_super) {\n    tslib_1.__extends(LabelBase, _super);\n    function LabelBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    LabelBase.prototype.render = function () {\n        var _a = this.props, _b = _a.as, RootType = _b === void 0 ? 'label' : _b, children = _a.children, className = _a.className, disabled = _a.disabled, styles = _a.styles, required = _a.required, theme = _a.theme;\n        var classNames = getClassNames(styles, {\n            className: className,\n            disabled: disabled,\n            required: required,\n            theme: theme\n        });\n        return (React.createElement(RootType, tslib_1.__assign({}, getNativeProps(this.props, divProperties), { className: classNames.root }), children));\n    };\n    return LabelBase;\n}(React.Component));\nexport { LabelBase };\n//# sourceMappingURL=Label.base.js.map","import { styled } from '../../Utilities';\nimport { LabelBase } from './Label.base';\nimport { getStyles } from './Label.styles';\nexport var Label = styled(LabelBase, getStyles, undefined, {\n    scope: 'Label'\n});\n//# sourceMappingURL=Label.js.map","import { HighContrastSelector } from '../../Styling';\nexport var getStyles = function (props) {\n    var theme = props.theme, className = props.className, disabled = props.disabled, required = props.required;\n    return {\n        root: [\n            'ms-Label',\n            theme.fonts.medium,\n            {\n                color: theme.semanticColors.bodyText,\n                boxSizing: 'border-box',\n                boxShadow: 'none',\n                margin: 0,\n                display: 'block',\n                padding: '5px 0',\n                wordWrap: 'break-word',\n                overflowWrap: 'break-word'\n            },\n            disabled && {\n                color: theme.semanticColors.disabledBodyText,\n                selectors: (_a = {},\n                    _a[HighContrastSelector] = {\n                        color: 'GrayText'\n                    },\n                    _a)\n            },\n            required && {\n                selectors: {\n                    '::after': {\n                        content: \"' *'\",\n                        color: theme.semanticColors.errorText,\n                        paddingRight: 12\n                    }\n                }\n            },\n            className\n        ]\n    };\n    var _a;\n};\n//# sourceMappingURL=Label.styles.js.map","import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport { Image } from '../../../Image';\nimport { Icon } from '../../../Icon';\nimport { classNamesFunction, getNativeProps, inputProperties, css } from '../../../Utilities';\nvar getClassNames = classNamesFunction();\n/**\n * {@docCategory ChoiceGroup}\n */\nvar ChoiceGroupOptionBase = /** @class */ (function (_super) {\n    tslib_1.__extends(ChoiceGroupOptionBase, _super);\n    function ChoiceGroupOptionBase() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._inputElement = React.createRef();\n        _this._onRenderField = function (props) {\n            var _a = props.onRenderLabel, onRenderLabel = _a === void 0 ? _this._onRenderLabel : _a, id = props.id, imageSrc = props.imageSrc, imageAlt = props.imageAlt, selectedImageSrc = props.selectedImageSrc, iconProps = props.iconProps;\n            var imageSize = props.imageSize ? props.imageSize : { width: 32, height: 32 };\n            return (React.createElement(\"label\", { htmlFor: id, className: _this._classNames.field },\n                imageSrc && (React.createElement(\"div\", { className: _this._classNames.innerField, style: { height: imageSize.height, width: imageSize.width } },\n                    React.createElement(\"div\", { className: _this._classNames.imageWrapper },\n                        React.createElement(Image, { src: imageSrc, alt: imageAlt ? imageAlt : '', width: imageSize.width, height: imageSize.height })),\n                    React.createElement(\"div\", { className: _this._classNames.selectedImageWrapper },\n                        React.createElement(Image, { src: selectedImageSrc, alt: imageAlt ? imageAlt : '', width: imageSize.width, height: imageSize.height })))),\n                iconProps ? (React.createElement(\"div\", { className: _this._classNames.innerField },\n                    React.createElement(\"div\", { className: _this._classNames.iconWrapper },\n                        React.createElement(Icon, tslib_1.__assign({}, iconProps))))) : null,\n                imageSrc || iconProps ? (React.createElement(\"div\", { className: _this._classNames.labelWrapper, style: { maxWidth: imageSize.width * 2 } }, onRenderLabel(props))) : (onRenderLabel(props))));\n        };\n        _this._onRenderLabel = function (props) {\n            return (React.createElement(\"span\", { id: props.labelId, className: \"ms-ChoiceFieldLabel\" }, props.text));\n        };\n        return _this;\n    }\n    ChoiceGroupOptionBase.prototype.render = function () {\n        var _a = this.props, ariaLabel = _a.ariaLabel, focused = _a.focused, required = _a.required, theme = _a.theme, iconProps = _a.iconProps, imageSrc = _a.imageSrc, _b = _a.imageSize, imageSize = _b === void 0 ? { width: 32, height: 32 } : _b, disabled = _a.disabled, checked = _a.checked, id = _a.id, styles = _a.styles, name = _a.name, _c = _a.onRenderField, onRenderField = _c === void 0 ? this._onRenderField : _c, rest = tslib_1.__rest(_a, [\"ariaLabel\", \"focused\", \"required\", \"theme\", \"iconProps\", \"imageSrc\", \"imageSize\", \"disabled\", \"checked\", \"id\", \"styles\", \"name\", \"onRenderField\"]);\n        this._classNames = getClassNames(styles, {\n            theme: theme,\n            hasIcon: !!iconProps,\n            hasImage: !!imageSrc,\n            checked: checked,\n            disabled: disabled,\n            imageIsLarge: !!imageSrc && (imageSize.width > 71 || imageSize.height > 71),\n            focused: focused\n        });\n        var _d = getNativeProps(rest, inputProperties), className = _d.className, nativeProps = tslib_1.__rest(_d, [\"className\"]);\n        return (React.createElement(\"div\", { className: this._classNames.root },\n            React.createElement(\"div\", { className: this._classNames.choiceFieldWrapper },\n                React.createElement(\"input\", tslib_1.__assign({ \"aria-label\": ariaLabel ? ariaLabel : undefined, ref: this._inputElement, id: id, className: css(this._classNames.input, className), type: \"radio\", name: name, disabled: disabled, checked: checked, required: required, onChange: this._onChange.bind(this, this.props), onFocus: this._onFocus.bind(this, this.props), onBlur: this._onBlur.bind(this, this.props) }, nativeProps)),\n                onRenderField(this.props, this._onRenderField))));\n    };\n    ChoiceGroupOptionBase.prototype._onChange = function (props, evt) {\n        var onChange = props.onChange;\n        if (onChange) {\n            onChange(evt, props);\n        }\n    };\n    ChoiceGroupOptionBase.prototype._onBlur = function (props, evt) {\n        var onBlur = props.onBlur;\n        if (onBlur) {\n            onBlur(evt, props);\n        }\n    };\n    ChoiceGroupOptionBase.prototype._onFocus = function (props, evt) {\n        var onFocus = props.onFocus;\n        if (onFocus) {\n            onFocus(evt, props);\n        }\n    };\n    return ChoiceGroupOptionBase;\n}(React.Component));\nexport { ChoiceGroupOptionBase };\n//# sourceMappingURL=ChoiceGroupOption.base.js.map","import { FontSizes, FontWeights, HighContrastSelector, getGlobalClassNames } from '../../../Styling';\nimport { IsFocusVisibleClassName } from '../../../Utilities';\nvar GlobalClassNames = {\n    root: 'ms-ChoiceField',\n    choiceFieldWrapper: 'ms-ChoiceField-wrapper',\n    input: 'ms-ChoiceField-input',\n    field: 'ms-ChoiceField-field',\n    innerField: 'ms-ChoiceField-innerField',\n    imageWrapper: 'ms-ChoiceField-imageWrapper',\n    iconWrapper: 'ms-ChoiceField-iconWrapper',\n    labelWrapper: 'ms-ChoiceField-labelWrapper',\n    checked: 'is-checked'\n};\nvar labelWrapperLineHeight = 15;\nvar iconSize = 32;\nvar choiceFieldSize = 20;\nvar choiceFieldTransitionDuration = '200ms';\nvar choiceFieldTransitionTiming = 'cubic-bezier(.4, 0, .23, 1)';\nvar radioButtonSpacing = 3;\nvar radioButtonInnerSize = 5;\nfunction getChoiceGroupFocusStyle(palette, hasIconOrImage) {\n    return [\n        'is-inFocus',\n        {\n            selectors: (_a = {},\n                _a[\".\" + IsFocusVisibleClassName + \" &\"] = {\n                    position: 'relative',\n                    outline: 'transparent',\n                    selectors: {\n                        '::-moz-focus-inner': {\n                            border: 0\n                        },\n                        ':after': {\n                            content: '\"\"',\n                            top: -2,\n                            right: -2,\n                            bottom: -2,\n                            left: -2,\n                            pointerEvents: 'none',\n                            border: '1px solid ' + (hasIconOrImage ? palette.neutralSecondary : palette.neutralPrimary),\n                            position: 'absolute',\n                            selectors: (_b = {},\n                                _b[HighContrastSelector] = {\n                                    borderColor: 'WindowText',\n                                    borderWidth: hasIconOrImage ? 1 : 2\n                                },\n                                _b)\n                        }\n                    }\n                },\n                _a)\n        }\n    ];\n    var _a, _b;\n}\nfunction getImageWrapperStyle(isSelectedImageWrapper, className, checked) {\n    return [\n        className,\n        {\n            paddingBottom: 2,\n            transitionProperty: 'opacity',\n            transitionDuration: choiceFieldTransitionDuration,\n            transitionTimingFunction: 'ease',\n            selectors: {\n                '.ms-Image': {\n                    display: 'inline-block',\n                    borderStyle: 'none'\n                }\n            }\n        },\n        (checked ? !isSelectedImageWrapper : isSelectedImageWrapper) && [\n            'is-hidden',\n            {\n                position: 'absolute',\n                left: 0,\n                top: 0,\n                width: '100%',\n                height: '100%',\n                overflow: 'hidden',\n                opacity: 0\n            }\n        ]\n    ];\n}\nexport var getStyles = function (props) {\n    var theme = props.theme, hasIcon = props.hasIcon, hasImage = props.hasImage, checked = props.checked, disabled = props.disabled, imageIsLarge = props.imageIsLarge, focused = props.focused;\n    var palette = theme.palette, semanticColors = theme.semanticColors;\n    var classNames = getGlobalClassNames(GlobalClassNames, theme);\n    var fieldHoverOrFocusProperties = {\n        selectors: {\n            '.ms-ChoiceFieldLabel': {\n                color: semanticColors.bodyTextChecked\n            },\n            ':before': {\n                borderColor: checked ? semanticColors.inputBackgroundCheckedHovered : semanticColors.inputBorderHovered\n            }\n        }\n    };\n    var enabledFieldWithImageHoverOrFocusProperties = {\n        borderColor: checked ? palette.themeDark : palette.neutralTertiaryAlt,\n        selectors: {\n            ':before': {\n                opacity: 1,\n                borderColor: checked ? palette.themeDark : semanticColors.inputBorderHovered\n            }\n        }\n    };\n    var circleAreaProperties = [\n        {\n            content: '\"\"',\n            display: 'inline-block',\n            backgroundColor: semanticColors.bodyBackground,\n            borderWidth: 1,\n            borderStyle: 'solid',\n            borderColor: semanticColors.smallInputBorder,\n            width: choiceFieldSize,\n            height: choiceFieldSize,\n            fontWeight: 'normal',\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            boxSizing: 'border-box',\n            transitionProperty: 'border-color',\n            transitionDuration: choiceFieldTransitionDuration,\n            transitionTimingFunction: choiceFieldTransitionTiming,\n            borderRadius: '50%'\n        },\n        disabled && {\n            backgroundColor: checked ? semanticColors.bodyBackground : semanticColors.disabledText,\n            borderColor: semanticColors.disabledText,\n            selectors: (_a = {},\n                _a[HighContrastSelector] = {\n                    color: 'GrayText'\n                },\n                _a)\n        },\n        checked && {\n            borderWidth: 1,\n            borderStyle: 'solid',\n            borderColor: disabled ? semanticColors.disabledText : semanticColors.inputBackgroundChecked,\n            selectors: (_b = {},\n                _b[HighContrastSelector] = {\n                    borderColor: 'Highlight'\n                },\n                _b)\n        },\n        (hasIcon || hasImage) && {\n            top: radioButtonSpacing,\n            right: radioButtonSpacing,\n            left: 'auto',\n            opacity: !disabled && checked ? 1 : 0\n        }\n    ];\n    var dotAreaProperties = [\n        {\n            content: '\"\"',\n            width: 0,\n            height: 0,\n            borderRadius: '50%',\n            position: 'absolute',\n            left: choiceFieldSize / 2,\n            right: 0,\n            transitionProperty: 'border-width',\n            transitionDuration: choiceFieldTransitionDuration,\n            transitionTimingFunction: choiceFieldTransitionTiming,\n            boxSizing: 'border-box'\n        },\n        checked && {\n            borderWidth: 5,\n            borderStyle: 'solid',\n            borderColor: disabled ? semanticColors.disabledText : semanticColors.inputBackgroundChecked,\n            left: 5,\n            top: 5,\n            width: 10,\n            height: 10,\n            selectors: (_c = {},\n                _c[HighContrastSelector] = {\n                    borderColor: 'Highlight'\n                },\n                _c)\n        },\n        checked &&\n            (hasIcon || hasImage) && {\n            top: radioButtonSpacing + radioButtonInnerSize,\n            right: radioButtonSpacing + radioButtonInnerSize,\n            left: 'auto' // To reset the value of 'left' to its default value, so that 'right' works\n        }\n    ];\n    return {\n        root: [\n            classNames.root,\n            theme.fonts.medium,\n            {\n                display: 'flex',\n                alignItems: 'center',\n                boxSizing: 'border-box',\n                color: semanticColors.bodyText,\n                fontSize: FontSizes.medium,\n                fontWeight: FontWeights.regular,\n                minHeight: 26,\n                border: 'none',\n                position: 'relative',\n                marginTop: 8,\n                selectors: {\n                    '.ms-ChoiceFieldLabel': {\n                        fontSize: FontSizes.medium,\n                        display: 'inline-block'\n                    }\n                }\n            },\n            !hasIcon &&\n                !hasImage && {\n                selectors: {\n                    '.ms-ChoiceFieldLabel': {\n                        paddingLeft: '26px'\n                    }\n                }\n            },\n            hasImage && 'ms-ChoiceField--image',\n            hasIcon && 'ms-ChoiceField--icon',\n            (hasIcon || hasImage) && {\n                display: 'inline-flex',\n                fontSize: 0,\n                margin: '0 4px 4px 0',\n                paddingLeft: 0,\n                backgroundColor: palette.neutralLighter,\n                height: '100%'\n            }\n        ],\n        choiceFieldWrapper: [classNames.choiceFieldWrapper, focused && getChoiceGroupFocusStyle(palette, hasIcon || hasImage)],\n        // The hidden input\n        input: [\n            classNames.input,\n            {\n                position: 'absolute',\n                opacity: 0,\n                top: 0,\n                right: 0,\n                width: '100%',\n                height: '100%',\n                margin: 0\n            }\n        ],\n        field: [\n            classNames.field,\n            checked && classNames.checked,\n            {\n                display: 'inline-block',\n                cursor: 'pointer',\n                marginTop: 0,\n                position: 'relative',\n                verticalAlign: 'top',\n                userSelect: 'none',\n                minHeight: 20,\n                selectors: {\n                    ':hover': !disabled && fieldHoverOrFocusProperties,\n                    ':focus': !disabled && fieldHoverOrFocusProperties,\n                    // The circle\n                    ':before': circleAreaProperties,\n                    // The dot\n                    ':after': dotAreaProperties\n                }\n            },\n            hasIcon && 'ms-ChoiceField--icon',\n            hasImage && 'ms-ChoiceField-field--image',\n            (hasIcon || hasImage) && {\n                boxSizing: 'content-box',\n                cursor: 'pointer',\n                paddingTop: 22,\n                margin: 0,\n                textAlign: 'center',\n                transitionProperty: 'all',\n                transitionDuration: choiceFieldTransitionDuration,\n                transitionTimingFunction: 'ease',\n                border: '2px solid transparent',\n                justifyContent: 'center',\n                alignItems: 'center',\n                display: 'flex',\n                flexDirection: 'column'\n            },\n            checked && {\n                borderColor: palette.themePrimary\n            },\n            (hasIcon || hasImage) &&\n                !disabled && {\n                selectors: {\n                    ':hover': enabledFieldWithImageHoverOrFocusProperties,\n                    ':focus': enabledFieldWithImageHoverOrFocusProperties\n                }\n            },\n            disabled && {\n                cursor: 'default',\n                selectors: (_d = {\n                        '.ms-ChoiceFieldLabel': {\n                            color: semanticColors.disabledBodyText\n                        }\n                    },\n                    _d[HighContrastSelector] = {\n                        color: 'GrayText'\n                    },\n                    _d)\n            }\n        ],\n        innerField: [\n            classNames.innerField,\n            (hasIcon || hasImage) && {\n                position: 'relative',\n                display: 'inline-block',\n                paddingLeft: 30,\n                paddingRight: 30\n            },\n            (hasIcon || hasImage) &&\n                imageIsLarge && {\n                paddingLeft: 24,\n                paddingRight: 24\n            },\n            (hasIcon || hasImage) &&\n                disabled && {\n                opacity: 0.25,\n                selectors: (_e = {},\n                    _e[HighContrastSelector] = {\n                        color: 'GrayText',\n                        opacity: 1\n                    },\n                    _e)\n            }\n        ],\n        imageWrapper: getImageWrapperStyle(false, classNames.imageWrapper, checked),\n        selectedImageWrapper: getImageWrapperStyle(true, classNames.imageWrapper, checked),\n        iconWrapper: [\n            classNames.iconWrapper,\n            {\n                fontSize: iconSize,\n                lineHeight: iconSize,\n                height: iconSize\n            }\n        ],\n        labelWrapper: [\n            classNames.labelWrapper,\n            (hasIcon || hasImage) && {\n                display: 'block',\n                position: 'relative',\n                margin: '4px 8px',\n                height: labelWrapperLineHeight * 2,\n                lineHeight: labelWrapperLineHeight,\n                overflow: 'hidden',\n                whiteSpace: 'pre-wrap',\n                textOverflow: 'ellipsis',\n                fontSize: FontSizes.medium,\n                fontWeight: FontWeights.regular\n            }\n        ]\n    };\n    var _a, _b, _c, _d, _e;\n};\n//# sourceMappingURL=ChoiceGroupOption.styles.js.map","import { styled } from '../../../Utilities';\nimport { ChoiceGroupOptionBase } from './ChoiceGroupOption.base';\nimport { getStyles } from './ChoiceGroupOption.styles';\nexport var ChoiceGroupOption = styled(ChoiceGroupOptionBase, getStyles, undefined, { scope: 'ChoiceGroupOption' });\n//# sourceMappingURL=ChoiceGroupOption.js.map","import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport { Label } from '../../Label';\nimport { initializeComponentRef, warnDeprecations, warnMutuallyExclusive, classNamesFunction, find, getId, getNativeProps, divProperties } from '../../Utilities';\nimport { ChoiceGroupOption } from './ChoiceGroupOption/index';\nvar getClassNames = classNamesFunction();\n/**\n * {@docCategory ChoiceGroup}\n */\nvar ChoiceGroupBase = /** @class */ (function (_super) {\n    tslib_1.__extends(ChoiceGroupBase, _super);\n    function ChoiceGroupBase(props) {\n        var _this = _super.call(this, props) || this;\n        _this._inputElement = React.createRef();\n        _this.focusedVars = {};\n        _this.changedVars = {};\n        _this._onFocus = function (key) {\n            return _this.focusedVars[key]\n                ? _this.focusedVars[key]\n                : (_this.focusedVars[key] = function (ev, option) {\n                    _this.setState({\n                        keyFocused: key,\n                        keyChecked: _this.state.keyChecked\n                    });\n                });\n        };\n        _this._onBlur = function (ev, option) {\n            _this.setState({\n                keyFocused: undefined,\n                keyChecked: _this.state.keyChecked\n            });\n        };\n        _this._onChange = function (key) {\n            return _this.changedVars[key]\n                ? _this.changedVars[key]\n                : (_this.changedVars[key] = function (evt, option) {\n                    var _a = _this.props, onChanged = _a.onChanged, onChange = _a.onChange, selectedKey = _a.selectedKey, _b = _a.options, options = _b === void 0 ? [] : _b;\n                    // Only manage state in uncontrolled scenarios.\n                    if (selectedKey === undefined) {\n                        _this.setState({\n                            keyChecked: key\n                        });\n                    }\n                    var originalOption = find(options, function (value) { return value.key === key; });\n                    // TODO: onChanged deprecated, remove else if after 07/17/2017 when onChanged has been removed.\n                    if (onChange) {\n                        onChange(evt, originalOption);\n                    }\n                    else if (onChanged) {\n                        onChanged(originalOption);\n                    }\n                });\n        };\n        initializeComponentRef(_this);\n        if (process.env.NODE_ENV !== 'production') {\n            warnDeprecations('ChoiceGroup', props, { onChanged: 'onChange' });\n            warnMutuallyExclusive('ChoiceGroup', props, {\n                selectedKey: 'defaultSelectedKey'\n            });\n        }\n        var validDefaultSelectedKey = !!props.options && props.options.some(function (option) { return option.key === props.defaultSelectedKey; });\n        _this.state = {\n            keyChecked: props.defaultSelectedKey === undefined || !validDefaultSelectedKey ? _this._getKeyChecked(props) : props.defaultSelectedKey,\n            keyFocused: undefined\n        };\n        _this._id = getId('ChoiceGroup');\n        _this._labelId = getId('ChoiceGroupLabel');\n        return _this;\n    }\n    Object.defineProperty(ChoiceGroupBase.prototype, \"checkedOption\", {\n        /**\n         * Gets the current checked option.\n         */\n        get: function () {\n            var _a = this.props.options, options = _a === void 0 ? [] : _a;\n            var key = this.state.keyChecked;\n            return find(options, function (value) { return value.key === key; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ChoiceGroupBase.prototype.componentWillReceiveProps = function (newProps) {\n        var newKeyChecked = this._getKeyChecked(newProps);\n        var oldKeyChecked = this._getKeyChecked(this.props);\n        if (newKeyChecked !== oldKeyChecked) {\n            this.setState({\n                keyChecked: newKeyChecked\n            });\n        }\n    };\n    ChoiceGroupBase.prototype.render = function () {\n        var _this = this;\n        var _a = this.props, className = _a.className, theme = _a.theme, styles = _a.styles, options = _a.options, label = _a.label, required = _a.required, disabled = _a.disabled, name = _a.name, role = _a.role;\n        var _b = this.state, keyChecked = _b.keyChecked, keyFocused = _b.keyFocused;\n        var divProps = getNativeProps(this.props, divProperties, ['onChange', 'className', 'required']);\n        var classNames = getClassNames(styles, {\n            theme: theme,\n            className: className,\n            optionsContainIconOrImage: options.some(function (option) { return Boolean(option.iconProps || option.imageSrc); })\n        });\n        var ariaLabelledBy = this.props.ariaLabelledBy\n            ? this.props.ariaLabelledBy\n            : label\n                ? this._id + '-label'\n                : this.props['aria-labelledby'];\n        return (React.createElement(\"div\", tslib_1.__assign({ role: role, className: classNames.applicationRole }, divProps),\n            React.createElement(\"div\", tslib_1.__assign({ className: classNames.root, role: \"radiogroup\" }, ariaLabelledBy && { 'aria-labelledby': ariaLabelledBy }),\n                label && (React.createElement(Label, { className: classNames.label, required: required, id: this._id + '-label' }, label)),\n                React.createElement(\"div\", { className: classNames.flexContainer }, options.map(function (option) {\n                    var innerOptionProps = tslib_1.__assign({}, option, { focused: option.key === keyFocused, checked: option.key === keyChecked, disabled: option.disabled || disabled, id: _this._id + \"-\" + option.key, labelId: _this._labelId + \"-\" + option.key, name: name || _this._id, required: required });\n                    return (React.createElement(ChoiceGroupOption, tslib_1.__assign({ key: option.key, onBlur: _this._onBlur, onFocus: _this._onFocus(option.key), onChange: _this._onChange(option.key) }, innerOptionProps)));\n                })))));\n    };\n    ChoiceGroupBase.prototype.focus = function () {\n        var options = this.props.options;\n        if (options) {\n            for (var _i = 0, options_1 = options; _i < options_1.length; _i++) {\n                var option = options_1[_i];\n                var elementToFocus = document.getElementById(this._id + \"-\" + option.key);\n                if (elementToFocus && elementToFocus.getAttribute('data-is-focusable') === 'true') {\n                    elementToFocus.focus(); // focus on checked or default focusable key\n                    return;\n                }\n            }\n        }\n        if (this._inputElement.current) {\n            this._inputElement.current.focus();\n        }\n    };\n    ChoiceGroupBase.prototype._getKeyChecked = function (props) {\n        if (props.selectedKey !== undefined) {\n            return props.selectedKey;\n        }\n        var _a = props.options, options = _a === void 0 ? [] : _a;\n        var optionsChecked = options.filter(function (option) {\n            return option.checked;\n        });\n        if (optionsChecked.length === 0) {\n            return undefined;\n        }\n        else {\n            return optionsChecked[0].key;\n        }\n    };\n    ChoiceGroupBase.defaultProps = {\n        options: []\n    };\n    return ChoiceGroupBase;\n}(React.Component));\nexport { ChoiceGroupBase };\n//# sourceMappingURL=ChoiceGroup.base.js.map","import { getGlobalClassNames } from '../../Styling';\nvar GlobalClassNames = {\n    root: 'ms-ChoiceFieldGroup',\n    flexContainer: 'ms-ChoiceFieldGroup-flexContainer'\n};\nexport var getStyles = function (props) {\n    var className = props.className, optionsContainIconOrImage = props.optionsContainIconOrImage, theme = props.theme;\n    var classNames = getGlobalClassNames(GlobalClassNames, theme);\n    return {\n        applicationRole: className,\n        root: [\n            classNames.root,\n            theme.fonts.medium,\n            {\n                display: 'block'\n            }\n        ],\n        flexContainer: [\n            classNames.flexContainer,\n            optionsContainIconOrImage && {\n                display: 'flex',\n                flexDirection: 'row',\n                flexWrap: 'wrap'\n            }\n        ]\n    };\n};\n//# sourceMappingURL=ChoiceGroup.styles.js.map","import { styled } from '../../Utilities';\nimport { ChoiceGroupBase } from './ChoiceGroup.base';\nimport { getStyles } from './ChoiceGroup.styles';\nexport var ChoiceGroup = styled(ChoiceGroupBase, getStyles, undefined, { scope: 'ChoiceGroup' });\n//# sourceMappingURL=ChoiceGroup.js.map"],"sourceRoot":""}